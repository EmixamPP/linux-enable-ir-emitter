name: Build, Lint, Pack

on:
  workflow_dispatch:
  workflow_call:

env: 
  OPENCV_TINY_VERSION: "4.7.0"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y meson clang-tidy curl
          python -m pip install --upgrade pip
          python -m pip install pyright
          curl -L https://github.com/EmixamPP/opencv-tiny/releases/download/${OPENCV_TINY_VERSION}/opencv-tiny-${OPENCV_TINY_VERSION}_x86-64.tar.gz | tar -xz
          sed -i "s|=\(opencv-tiny-${OPENCV_TINY_VERSION}\)|=${PWD}/\1|g" opencv-tiny-${OPENCV_TINY_VERSION}/lib/pkgconfig/{opencv4.pc,zlib.pc}

      - name: Setup build
        id: setup
        run: |
          meson setup build --pkg-config-path opencv-tiny-${OPENCV_TINY_VERSION}/lib/pkgconfig
          meson configure build -Dlibdir=lib64 
      
      - name: Compile
        run: |
          meson compile -C build

      - name: Lint C++
        if: steps.setup.outcome == 'success'
        run: |
          ninja clang-tidy -C build

      - name: Lint Python
        if: ${{ always() }}
        run: |
          pyright $(git ls-files '*.py')
      
      - name: Create tarball
        run: |
          DESTDIR=install_dir meson install -C build
          tar -czvf build/linux-enable-ir-emitter.tar.gz -C build/install_dir .
  
      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: linux-enable-ir-emitter.tar.gz
          path: build/linux-enable-ir-emitter.tar.gz
