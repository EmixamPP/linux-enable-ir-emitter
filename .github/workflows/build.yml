name: Build, Test, Lint and Package

on:
  workflow_dispatch:
    inputs:
      buildtype:
        type: string
        default: release
  workflow_call:
    inputs:
      buildtype:
        type: string
        default: release
    outputs:
      build:
        value: ${{ jobs.build.outputs.build }}
      tests:
        value: ${{ jobs.build.outputs.tests }}
      clippy:
        value: ${{ jobs.build.outputs.clippy }}
      format:
        value: ${{ jobs.build.outputs.format }}
      tarball-url:
        value: ${{ jobs.build.outputs.tarball-url }}
      version:
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    name: Build, Test, Lint and Package
    runs-on: ubuntu-24.04
    outputs:
      build: ${{ steps.build.outcome }}
      tests: ${{ steps.tests.outcome }}
      clippy: ${{ steps.clippy.outcome }}
      format: ${{ steps.format.outcome }}
      version: ${{ steps.create-tarball.outputs.VERSION}}
      tarball-url: ${{ steps.upload-tarball.outputs.artifact-url }}
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: cargo cargo-clippy
          version: 1.0
      # TODO add cargo-audit?

      - name: Restore cached cargo dependencies
        id: deps-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        id: build
        continue-on-error: true
        run: |
          cargo build --${{ inputs.buildtype }}

      - name: Tests
        id: tests
        if: ${{ steps.build.outcome == 'success' }}
        continue-on-error: true
        run: cargo test --${{ inputs.buildtype }}

      - name: Clippy
        id: clippy
        continue-on-error: true
        run: cargo clippy --${{ inputs.buildtype }} -- -D warnings

      - name: Format
        id: format
        continue-on-error: true
        run: cargo fmt --${{ inputs.buildtype }} -- --check

      - name: Create tarball
        id: create-tarball
        if: ${{ steps.build.outcome == 'success' }}
        run: |
          version=$(cargo pkgid | sed 's/.*#//')
          echo "VERSION=$version" >> "$GITHUB_OUTPUT"

          tarball_name=linux-enable-ir-emitter-${version}-${{ inputs.buildtype }}.systemd.x86-64.tar.gz
          echo "TARBALL_NAME=$tarball_name" >> "$GITHUB_ENV"

          cargo install --path . --root build
          tar -czvf ${tarball_name} -C build .

      - name: Upload tarball
        id: upload-tarball
        if: ${{ steps.create-tarball.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TARBALL_NAME }}
          path: ${{ env.TARBALL_NAME }}
