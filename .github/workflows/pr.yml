name: Pull Request

on:
  pull_request:

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      buildtype: debug

  cpp-lint:
    needs:
      - build
    uses: ./.github/workflows/cpp-lint.yml

  comment:
    name: Bot comment
    needs:
      - build
      - cpp-lint
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: bot_comment
          mode: recreate
          message: |
            ## :arrow_right: Commit ${{ github.event.pull_request.head.sha }}

            ## :clipboard: [Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ## :mag: Linting results: ${{ (needs.cpp-lint.result == 'success' && ':white_check_mark:') || (needs.cpp-lint.result == 'skipped' && ':no_entry_sign:') || ':x:' }}

            ## :hammer_and_wrench: Building result: ${{ needs.build.result == 'success' && ':white_check_mark:' || ':x:' }}

            ## :package: Artifacts:
            If the building step was successfull:
            1. Download the tarball in the artifacts section [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).
            2. If new major version, [uninstall the previous version](docs/uninstallation.md) if you have one
            3. Unzip: `unzip linux-enable-ir-emitter*.tar.gz.zip`
            4. [Execute the install instructions](README.md#installation)

            During the execution the tool raises an exception?\
            Please send us the gdb backtrace: `sudo gdb --ex run --args linux-enable-ir-emitter <your command args>`, once the crash arrives, type "bt" to show the error trace ("q" to exit).
